// In the current prototype importing files does not make sense yet and there are no rules for it
// @import "external_script_one.nvl" // imports functions and variables
// @import "external_script_two.nvl" // imports functions and variables
// @import "external_script_three.nvl" // imports functions and variables


@characterHappiness : number // declares a variable
@declareImmediate : whole number = -10 // you can also declare a variable right away

// create a code block to mutate variables
@code {
    characterHappiness = 6

    function Random() : number
    {
        return 5
    }

    function IncreaseHealth(character : Character)
    {
        character.heath++
    }

    function DoALot(foo : whole number) : whole number {
        foo++
        characterHappiness += characterHappiness
        return foo * 2 * declareImmediate

        /*
        frame
        -----
        return val (4 bytes)
        -----
        args
        foo (4 bytes)
        -----
        stack offset (4 + 4 = 8)
        -----
        push rbp (frame pointer)
        inc foo | inc rbp + 4 | inc stack - 4
        load eax, characterHappiness
        add eax, characterHappiness
        mov characterHappiness, eax
        mul foo, 2 | mul frame + 4, 2 | mul stack - 4, 2
        mul eax, declareImmediate (should be position indipendent ie. global)
        mov return val, eax | mov frame, eax | move stack - 8 , eax
        pop rbp

        stack gets rewound until the return value is left
        */
    }

    structure PoorlyPacked { // (2 + 6) + 8 + (4 + 4) = 24
        a : small whole number
        b : big whole number
        c : whole number
    }

    structure ProperlyPacked { // 8 + (4 + 4) + (1 + 3) = 16
        a : big whole number
        b : whole number
        c : tiny whole number
    }

    /* TODO: add namespaces to separate code (and maybe threads?)
    namespace Foo.Bar {
        structure Fizz {
            buzz : small number
        }
    }
    */
}

@code {
    structure Character {
        health : number
        lives : whole number
    }
}

// raw text will be displayed into the story when called for
Hello you, this is an example of embedding variables into text
my big happiness value is\: {characterHappiness}

// you can even execute functions in text embedding
let me tell you a random number, {Random()}.

// you can also glue multiple lines into one big sentence.
this |
is |
all |
the |
same |
line!

How you feeling?
@if (characterHappiness > 5) {
    super
}
@else if (characterHappiness > 3) {
    meh
}
@else {
    bad
}

// stories can have branching with choices
what do you want?
@choice {
    food:
        i want a hamburger.
    money:
        I want a small loan of a million dollars
}

/* future goal to have threads
### My_Thread
this is a story thread that can be visited at any point
-> END
-> My_Other_Thread
-> RETURN
*/ 
