//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\vratelier\Documents\GitHub\GameLab-RnD\Compiler\StoryGrammar.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="StoryGrammar"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IStoryGrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.story"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStory([NotNull] StoryGrammar.StoryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.story"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStory([NotNull] StoryGrammar.StoryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.emptySentence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmptySentence([NotNull] StoryGrammar.EmptySentenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.emptySentence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmptySentence([NotNull] StoryGrammar.EmptySentenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.import_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImport_statement([NotNull] StoryGrammar.Import_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.import_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImport_statement([NotNull] StoryGrammar.Import_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.stringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringLiteral([NotNull] StoryGrammar.StringLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.stringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringLiteral([NotNull] StoryGrammar.StringLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.string_literal_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString_literal_value([NotNull] StoryGrammar.String_literal_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.string_literal_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString_literal_value([NotNull] StoryGrammar.String_literal_valueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.storyPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStoryPart([NotNull] StoryGrammar.StoryPartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.storyPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStoryPart([NotNull] StoryGrammar.StoryPartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.storySentence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStorySentence([NotNull] StoryGrammar.StorySentenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.storySentence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStorySentence([NotNull] StoryGrammar.StorySentenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.storyUnformattedSentence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStoryUnformattedSentence([NotNull] StoryGrammar.StoryUnformattedSentenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.storyUnformattedSentence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStoryUnformattedSentence([NotNull] StoryGrammar.StoryUnformattedSentenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.storyFormattedSentence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStoryFormattedSentence([NotNull] StoryGrammar.StoryFormattedSentenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.storyFormattedSentence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStoryFormattedSentence([NotNull] StoryGrammar.StoryFormattedSentenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.storyStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStoryStatement([NotNull] StoryGrammar.StoryStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.storyStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStoryStatement([NotNull] StoryGrammar.StoryStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.storyVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStoryVariableDeclaration([NotNull] StoryGrammar.StoryVariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.storyVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStoryVariableDeclaration([NotNull] StoryGrammar.StoryVariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.storyIfStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStoryIfStatement([NotNull] StoryGrammar.StoryIfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.storyIfStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStoryIfStatement([NotNull] StoryGrammar.StoryIfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] StoryGrammar.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] StoryGrammar.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.booleanLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanLiteral([NotNull] StoryGrammar.BooleanLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.booleanLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanLiteral([NotNull] StoryGrammar.BooleanLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] StoryGrammar.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] StoryGrammar.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] StoryGrammar.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] StoryGrammar.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.booleanExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanExpression([NotNull] StoryGrammar.BooleanExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.booleanExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanExpression([NotNull] StoryGrammar.BooleanExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.expression_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression_statement([NotNull] StoryGrammar.Expression_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.expression_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression_statement([NotNull] StoryGrammar.Expression_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.statement_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement_expression([NotNull] StoryGrammar.Statement_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.statement_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement_expression([NotNull] StoryGrammar.Statement_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.method_invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethod_invocation([NotNull] StoryGrammar.Method_invocationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.method_invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethod_invocation([NotNull] StoryGrammar.Method_invocationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.invocation_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInvocation_expression([NotNull] StoryGrammar.Invocation_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.invocation_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInvocation_expression([NotNull] StoryGrammar.Invocation_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_statement([NotNull] StoryGrammar.If_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_statement([NotNull] StoryGrammar.If_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_statement([NotNull] StoryGrammar.Return_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_statement([NotNull] StoryGrammar.Return_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] StoryGrammar.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] StoryGrammar.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.declaration_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration_statement([NotNull] StoryGrammar.Declaration_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.declaration_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration_statement([NotNull] StoryGrammar.Declaration_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmbedded_statement([NotNull] StoryGrammar.Embedded_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmbedded_statement([NotNull] StoryGrammar.Embedded_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.empty_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmpty_statement([NotNull] StoryGrammar.Empty_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.empty_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmpty_statement([NotNull] StoryGrammar.Empty_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.local_variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocal_variable_declaration([NotNull] StoryGrammar.Local_variable_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.local_variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocal_variable_declaration([NotNull] StoryGrammar.Local_variable_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.selection_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelection_statement([NotNull] StoryGrammar.Selection_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.selection_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelection_statement([NotNull] StoryGrammar.Selection_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.jump_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJump_statement([NotNull] StoryGrammar.Jump_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.jump_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJump_statement([NotNull] StoryGrammar.Jump_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.object_creation_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObject_creation_expression([NotNull] StoryGrammar.Object_creation_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.object_creation_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObject_creation_expression([NotNull] StoryGrammar.Object_creation_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.local_variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocal_variable_type([NotNull] StoryGrammar.Local_variable_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.local_variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocal_variable_type([NotNull] StoryGrammar.Local_variable_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.local_variable_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocal_variable_initializer([NotNull] StoryGrammar.Local_variable_initializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.local_variable_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocal_variable_initializer([NotNull] StoryGrammar.Local_variable_initializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] StoryGrammar.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] StoryGrammar.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.statement_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement_list([NotNull] StoryGrammar.Statement_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.statement_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement_list([NotNull] StoryGrammar.Statement_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.non_assignment_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNon_assignment_expression([NotNull] StoryGrammar.Non_assignment_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.non_assignment_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNon_assignment_expression([NotNull] StoryGrammar.Non_assignment_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.multiplicative_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicative_expression([NotNull] StoryGrammar.Multiplicative_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.multiplicative_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicative_expression([NotNull] StoryGrammar.Multiplicative_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.additive_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditive_expression([NotNull] StoryGrammar.Additive_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.additive_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditive_expression([NotNull] StoryGrammar.Additive_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.shift_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShift_expression([NotNull] StoryGrammar.Shift_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.shift_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShift_expression([NotNull] StoryGrammar.Shift_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.relational_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelational_expression([NotNull] StoryGrammar.Relational_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.relational_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelational_expression([NotNull] StoryGrammar.Relational_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.equality_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquality_expression([NotNull] StoryGrammar.Equality_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.equality_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquality_expression([NotNull] StoryGrammar.Equality_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.and_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd_expression([NotNull] StoryGrammar.And_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.and_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd_expression([NotNull] StoryGrammar.And_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.exclusive_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExclusive_or_expression([NotNull] StoryGrammar.Exclusive_or_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.exclusive_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExclusive_or_expression([NotNull] StoryGrammar.Exclusive_or_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.inclusive_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInclusive_or_expression([NotNull] StoryGrammar.Inclusive_or_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.inclusive_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInclusive_or_expression([NotNull] StoryGrammar.Inclusive_or_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.conditional_and_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditional_and_expression([NotNull] StoryGrammar.Conditional_and_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.conditional_and_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditional_and_expression([NotNull] StoryGrammar.Conditional_and_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.conditional_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditional_or_expression([NotNull] StoryGrammar.Conditional_or_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.conditional_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditional_or_expression([NotNull] StoryGrammar.Conditional_or_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.null_coalescing_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNull_coalescing_expression([NotNull] StoryGrammar.Null_coalescing_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.null_coalescing_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNull_coalescing_expression([NotNull] StoryGrammar.Null_coalescing_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.conditional_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditional_expression([NotNull] StoryGrammar.Conditional_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.conditional_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditional_expression([NotNull] StoryGrammar.Conditional_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.unary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_expression([NotNull] StoryGrammar.Unary_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.unary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_expression([NotNull] StoryGrammar.Unary_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.pre_increment_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPre_increment_expression([NotNull] StoryGrammar.Pre_increment_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.pre_increment_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPre_increment_expression([NotNull] StoryGrammar.Pre_increment_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.pre_decrement_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPre_decrement_expression([NotNull] StoryGrammar.Pre_decrement_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.pre_decrement_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPre_decrement_expression([NotNull] StoryGrammar.Pre_decrement_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.post_increment_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPost_increment_expression([NotNull] StoryGrammar.Post_increment_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.post_increment_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPost_increment_expression([NotNull] StoryGrammar.Post_increment_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.post_decrement_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPost_decrement_expression([NotNull] StoryGrammar.Post_decrement_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.post_decrement_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPost_decrement_expression([NotNull] StoryGrammar.Post_decrement_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.primary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary_expression([NotNull] StoryGrammar.Primary_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.primary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary_expression([NotNull] StoryGrammar.Primary_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary_expression_start([NotNull] StoryGrammar.Primary_expression_startContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary_expression_start([NotNull] StoryGrammar.Primary_expression_startContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.bracket_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBracket_expression([NotNull] StoryGrammar.Bracket_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.bracket_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBracket_expression([NotNull] StoryGrammar.Bracket_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.array_creation_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_creation_expression([NotNull] StoryGrammar.Array_creation_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.array_creation_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_creation_expression([NotNull] StoryGrammar.Array_creation_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.array_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_type([NotNull] StoryGrammar.Array_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.array_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_type([NotNull] StoryGrammar.Array_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.rank_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRank_specifier([NotNull] StoryGrammar.Rank_specifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.rank_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRank_specifier([NotNull] StoryGrammar.Rank_specifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.non_array_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNon_array_type([NotNull] StoryGrammar.Non_array_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.non_array_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNon_array_type([NotNull] StoryGrammar.Non_array_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression_list([NotNull] StoryGrammar.Expression_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression_list([NotNull] StoryGrammar.Expression_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.parenthesized_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesized_expression([NotNull] StoryGrammar.Parenthesized_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.parenthesized_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesized_expression([NotNull] StoryGrammar.Parenthesized_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.member_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMember_access([NotNull] StoryGrammar.Member_accessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.member_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMember_access([NotNull] StoryGrammar.Member_accessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.simple_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_name([NotNull] StoryGrammar.Simple_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.simple_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_name([NotNull] StoryGrammar.Simple_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.type_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_argument_list([NotNull] StoryGrammar.Type_argument_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.type_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_argument_list([NotNull] StoryGrammar.Type_argument_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.type_arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_arguments([NotNull] StoryGrammar.Type_argumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.type_arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_arguments([NotNull] StoryGrammar.Type_argumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.type_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_argument([NotNull] StoryGrammar.Type_argumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.type_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_argument([NotNull] StoryGrammar.Type_argumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] StoryGrammar.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] StoryGrammar.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.type_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_parameter([NotNull] StoryGrammar.Type_parameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.type_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_parameter([NotNull] StoryGrammar.Type_parameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] StoryGrammar.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] StoryGrammar.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.value_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue_type([NotNull] StoryGrammar.Value_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.value_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue_type([NotNull] StoryGrammar.Value_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.non_nullable_value_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNon_nullable_value_type([NotNull] StoryGrammar.Non_nullable_value_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.non_nullable_value_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNon_nullable_value_type([NotNull] StoryGrammar.Non_nullable_value_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.struct_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_type([NotNull] StoryGrammar.Struct_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.struct_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_type([NotNull] StoryGrammar.Struct_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.simple_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_type([NotNull] StoryGrammar.Simple_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.simple_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_type([NotNull] StoryGrammar.Simple_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.numeric_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumeric_type([NotNull] StoryGrammar.Numeric_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.numeric_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumeric_type([NotNull] StoryGrammar.Numeric_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.floating_point_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloating_point_type([NotNull] StoryGrammar.Floating_point_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.floating_point_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloating_point_type([NotNull] StoryGrammar.Floating_point_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.integral_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegral_type([NotNull] StoryGrammar.Integral_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.integral_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegral_type([NotNull] StoryGrammar.Integral_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.namespace_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespace_name([NotNull] StoryGrammar.Namespace_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.namespace_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespace_name([NotNull] StoryGrammar.Namespace_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_name([NotNull] StoryGrammar.Type_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_name([NotNull] StoryGrammar.Type_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.namespace_or_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespace_or_type_name([NotNull] StoryGrammar.Namespace_or_type_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.namespace_or_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespace_or_type_name([NotNull] StoryGrammar.Namespace_or_type_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.this_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThis_access([NotNull] StoryGrammar.This_accessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.this_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThis_access([NotNull] StoryGrammar.This_accessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument_list([NotNull] StoryGrammar.Argument_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument_list([NotNull] StoryGrammar.Argument_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] StoryGrammar.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] StoryGrammar.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.argument_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument_name([NotNull] StoryGrammar.Argument_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.argument_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument_name([NotNull] StoryGrammar.Argument_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StoryGrammar.argument_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument_value([NotNull] StoryGrammar.Argument_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StoryGrammar.argument_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument_value([NotNull] StoryGrammar.Argument_valueContext context);
}
